@model IList<Glossary>

@helper GetTopSearachedTerms()
{


var glossaries = (IList<Glossary>)ViewData["glossary"];
glossaries = glossaries.OrderByDescending( p => p.Counter ).Take( 20 ).OrderBy( p => p.Term ).ToList();
foreach ( var glossary in glossaries )
{
		<div>
			<a href='@Url.Action("Search", new {term = @glossary.Term})'>
				<SPAN STYLE="font-size: @Math.Min(300L, glossary.Counter.GetValueOrDefault() + 100)%">@glossary.Term </SPAN>
			</a>
		</div>
	}
}
@using BiofuelSouth.Models
@using BiofuelSouth.Services


@{
	ViewBag.Title = "Search";
}

<div class="row">
	<div class="col-xs-8" id="searchDisplay">
		<div class="panel panel-default">
			<div class="panel-heading">
				<h4>Glossary Search</h4>
			</div>
			<div class="panel-body">
				<div id="searchInstruction">
					@{
						if ( ViewData["term"].Equals( "" ) )
						{

							<p>Please enter search term in the bar above or select a term from the list in the right.</p>
						}

					}
				</div>

				<div id="searchResult">
					@{
						if ( Model.Count > 0 )
						{

							if ( Model.First() != null && !Model.First().Description.Equals( "TBI" ) && !ViewData["term"].Equals( "" ) )
							{

								var result = Model.First();
								<div class="resultTerm">@result.Term:</div>
								<div class="resultDescription">@result.Description.</div>
								<br />
								<div class="resultHirarchy">[@result.Counter]</div>
								<div class="resultSource">More Information: @result.Source</div>
								Model.RemoveAt( 0 );
							}
							else if ( Model.First() != null && Model.First().Description.Equals( "TBI" ) && !ViewData["term"].Equals( "" ) )
							{
								var i = Model.First().Counter;
								if ( i != null )
								{
									var counter = (int)i;



									Model.RemoveAt( 0 );
									if ( !ViewData["term"].Equals( "" ) )
									{
										<div>
											No result was found for <strong>@ViewData["term"]</strong>.[@counter]
										</div>


									}
								}
							}
						}
						else
						{
							if ( !ViewData["term"].Equals( "" ) )
							{
								<div>
									No result was found for <strong>@ViewData["term"]</strong>.
								</div>


							}
						}

					}
				</div>

				<div id="relatedResults">
					@{

						if ( Model.Any() && !ViewData["term"].Equals( "" ) )
						{
							<br />
							<div style="font-weight: bold;">
								Related Terms
							</div>
							<span>
								class="pull-left">

								@foreach ( var glossary in Model )
								{

									<a href='@Url.Action("Search", new {term = @glossary.Term})'>@glossary.Term</a>

								}
							</span>

						}
					}
				</div>
				<br />
				<hr />
				<div id="GlossaryWords">
					@{
						var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
						var result1 = new List<string>();
						var breakPoint = 3;
						result1.Add( "All" );
						for ( var i = 0; i < chars.Length; i = i + breakPoint )
						{
							if ( i + breakPoint >= chars.Length )
							{
								breakPoint = ( chars.Length - i );
							}

							var temp = chars.Substring( i, breakPoint );

							for ( var j = temp.Length - 1; j > 0; j-- )
							{
								temp = temp.Insert( j, "-" );
							}
							result1.Add( temp );
						}
						
						result1.Add( "0-9" );
						result1.Add( "#*%&" );
						<div>
							@foreach ( var temp in result1 )
							{
								<a href="" onclick="GetWordList(event); return false;" class="btn btn-primary col-xs-1" id='@temp'>@temp</a>
							}
						</div>
						<div id="listOfWord">
							@{
								var results = DataService.GetAllTerms( "" );
								var formattedResult = "";
								foreach ( var word in results )
								{
									if ( word.Key != null )
									{
										<a href='@Url.Action("Search", new {term = @word.Key})'>

											<SPAN STYLE="font-size: @(Math.Min(300L, word.Value))%">@word.Key</SPAN>
										</a>
										@:&nbsp;


										//'<SPAN STYLE="font-size: ' + results[i].Value + '%">' + results[i].Key + "</SPAN> </a>";


									}

								}
							}
						</div>
					}

				</div>
			</div>
		</div>
	</div>

	<div class="col-xs-4 form-group">
		<div class="panel panel-default">
			<div class="panel-heading instruction-panel-heading">
				<h4>Top searches</h4>
			</div>
			<div class="panel-body Instruction-panel-body">
					@GetTopSearachedTerms()
				</div>
			</div>
		</div>

	</div>
	<script>
	function GetWordList(event) {
		var sender = $(event.target).attr('id');
		$.ajax({
			async: true,
			url: '@(Url.Action("GetListOfWords","Home"))',
			data: {
				key: sender
			},
			type: "get",
			datatype: "json",
			success: function (results) {
				var formattedResult = "";
				for (i = 0; i < results.length; i++) {

					//alert(results[i].Value);
					formattedResult = formattedResult + '<a href="" ' + results[i].Key + '>' +
						'<SPAN STYLE="font-size: ' + results[i].Value + '%">' + results[i].Key + "</SPAN> </a>";


					//formattedResult = formattedResult + '<a href="" ' + results[i].Key + '>' + results[i].Key + "</a> " + results[i].Value + "%";
				}
				if (formattedResult.length == 0) {
					formattedResult = "Not Found";
				}
				$('#listOfWord').html(formattedResult);
			},
			error: function () {
				alert('Could not get result from our server. Please try again later.');
			}
		});





	}

	</script>
