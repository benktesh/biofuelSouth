@using System.Globalization
@using BiofuelSouth.Enum
@model BiofuelSouth.ViewModels.ResultViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Bootstrap Case</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
</head>
<body>

    <div class="container">
        <h2>Results for @Model.CropType in @Model.CountyName, @Model.StateCode</h2>
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#home">Summary</a></li>
            <li><a data-toggle="tab" href="#menu1">Production</a></li>
            <li><a data-toggle="tab" href="#menu2">Cost</a></li>
            <li><a data-toggle="tab" href="#menu3">Inputs and Assumptions</a></li>
            <li><a data-toggle="tab" href="#menu4">More Information</a></li>
        </ul>

        <div class="tab-content">
            <div id="home" class="tab-pane fade in active">
                @*<h3>Summary of production and cost</h3>*@
                @Html.Partial("_summaryOverView", @Model)
            </div>
            <div id="menu1" class="tab-pane fade">
                <h3>Production Results</h3>

                @if (Model.ChartKeys.Select(m => m.Key == ChartType.Production).Any())
            {
                var keyValue = Model.ChartKeys.FirstOrDefault(m => m.Key == ChartType.Production).Value;
                var urlAnnualProduction = Url.Action("ShowChart", "Chart", new { @cacheKey = keyValue });
                    <div id="AnnualProductionChart" class="table-bordered">
                        <img src="@urlAnnualProduction" class="img-responsive" alt="Annual Production Chart" />
                    </div>
                    <br />
                }

                <p>Comparision with other crops</p>

                @if (Model.ChartKeys.Select(m => m.Key == ChartType.ProductionCompare).Any())
            {
                var keyValue = Model.ChartKeys.FirstOrDefault(m => m.Key == ChartType.ProductionCompare).Value;
                var urlAnnualProduction = Url.Action("ShowChart", "Chart", new { @cacheKey = keyValue });
                    <div id="ProductionCompareChart" class="table-bordered">
                        <img src="@urlAnnualProduction" class="img-responsive" alt="Production Compare Chart" />
                    </div>
                    <br />
                }
            </div>
            <div id="menu2" class="tab-pane fade">
                <h3>Cost And Revenue</h3>

                <p>
                    The graph below shows the cost and revenue information.
                    @if (Model.ChartKeys.Select(m => m.Key == ChartType.CostRevenue).Any())
                    {
                        var keyValue = Model.ChartKeys.FirstOrDefault(m => m.Key == ChartType.CostRevenue).Value;
                        var urlAnnualProduction1 = Url.Action("ShowChart", "Chart", new { @cacheKey = keyValue });
                        <div id="CostRevenueChart" class="table-bordered">
                            <img src="@urlAnnualProduction1" class="img-responsive " alt="Revenue Chart" />
                        </div>
                        <br />
                    }

                </p>



                <p>
                    The graphs below shows the cashflow information.
                    @if (Model.ChartKeys.Select(m => m.Key == ChartType.CashFlow).Any())
                    {
                        var keyValue = Model.ChartKeys.FirstOrDefault(m => m.Key == ChartType.CashFlow).Value;
                        var urlcashflow = Url.Action("ShowChart", "Chart", new { @cacheKey = keyValue });
                        <div id="CashFlowChart" class="table-bordered">
                            <img src="@urlcashflow" class="img-responsive" alt="CashFlow Chart" />
                        </div>
                        <br />
                    }
                </p>


                <p>
                    The following graph compares cashflow information with other crops.
                    @if (Model.ChartKeys.Select(m => m.Key == ChartType.CashFlowCompare).Any())
                    {
                        var keyValue = Model.ChartKeys.FirstOrDefault(m => m.Key == ChartType.CashFlowCompare).Value;
                        var urlcashflow = Url.Action("ShowChart", "Chart", new { @cacheKey = keyValue });
                        <div id="CashFlowCompareChart" class="table-bordered">
                            <img src="@urlcashflow" class="img-responsive" alt="CashFlow Compare Chart" />
                        </div>
                        <br />
                    }
                </p>


                @*<p>Comparision with other crops
                    @if (Model.ChartKeys.Select(m => m.Key == ChartType.RevenueCompare).Any())
                    {
                        var keyValue = Model.ChartKeys.FirstOrDefault(m => m.Key == ChartType.RevenueCompare).Value;
                        var urlAnnualProduction1 = Url.Action("ShowChart", "Chart", new { @cacheKey = keyValue });
                        <div id="CostRevenueCompareChart" class="table-bordered">
                            <img src="@urlAnnualProduction1" class="img-responsive " alt="Revenue Compare Chart" />
                        </div>
                        <br />
                    }
                    </p>*@
            </div>
            <div id="menu3" class="tab-pane fade">
                <h3>Input Data and Assumptions</h3>

                <p>
                    The result presented here is based on the following parameters/assumptions. <br />
                    <div> Biomass Price: @Model.BiomassPriceAtFarmGate </div>
                    <div> Project Size: @Model.ProjectSize </div>
                    <div> Land Cost: @Model.LandCost </div>
                    <div>
                        Average Cost Per Acre: @Model.AverageCostPerAcre
                        @*@(Math.Round(Model.GetAnnualCost() / Model.General.ProjectSize.GetValueOrDefault(), 0).ToString("C0")) per acre*@
                    </div>
                    <div>
                        Average Production Per Acre: @Model.AverageProdutivityPerAcre
                        @*@Math.Round(Model.GetAnnualProductionList().Average() / Model.General.ProjectSize.GetValueOrDefault(), 0).ToString("###,###.##") ton/acre*@
                    </div>
                </p>

                <h4>To change input parameters, click @Html.ActionLink("Start Over", "General", "DSS").</h4>
            </div>
            <div id="menu4" class="tab-pane fade">

                <div id="moreinformation">
                    @Html.Partial("_moreinformation")
                </div>

            </div>
        </div>
    </div>
    @Html.Partial("_Disclaimer")

</body>
</html>