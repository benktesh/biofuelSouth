@using BiofuelSouth.Models
@using BiofuelSouth.Resources
@using BiofuelSouth.Services
@model Financial

@{
    ViewBag.Title = String.Format("Financial Input: {0}", GeneralResource.DSS_Tittle_Display);
}
@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-8">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-xs-6"><h4>Financial Information</h4></div>
                </div>
                <div class="row">
                    <div class="col-xs-6">
                        @Html.LabelFor(model => model.RequireFinance, new { @class = "control-label" })
                        <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                           data-placement="center" title="Require Finance" data-content="<p>If the project require
                            finance, enter select Yes. It can be skipped if financial model is not applicable. </p>">
                            <span class="glyphicon glyphicon-question-sign"></span></a>
                        <span class="required">Required </span>

                        @Html.DropDownListFor(x => x.RequireFinance, Constants.GetYesNo(), "Select", new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.RequireFinance, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-xs-6">
                        &nbsp;
                    </div>
                </div>

                <div class="row">
                    <div id="financialParameter" hidden="hidden">
                        <div class="col-xs-6">
                            @Html.LabelFor(model => model.InterestRate, new { @class = "control-label" })
                            <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                               data-placement="center" title="Interest Rate" data-content="<p>If the project relies on financing, enter interest rate.
                       An interest rate is a rate which is charged or paid for the use of money and is often expressed as an annual percentage of the principal.
                        It is calculated by dividing the amount of interest by the amount of principal.
                    Interest rates often change as a result of inflation and financial policies. For example,
                    if a lender (such as a bank) charges a customer $75 in a year on a loan of $1000, then the interest rate would be 75/1000 *100% = 7.5%.
                    Read more: http://www.investorwords.com/2539/interest_rate.html#ixzz3NsD6A9ff </p>">
                            <span class="glyphicon glyphicon-question-sign"></span></a>

                            @Html.TextBoxFor(model => model.InterestRate, new { min = "0", step = "any", @class = "form-control", @Value = @Constants.GetAvgInterestRate() })
                            @Html.ValidationMessageFor(model => model.InterestRate, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-6">
                            @Html.LabelFor(model => model.AdministrativeCost, new { @class = "control-label" })
                            <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                               data-placement="left" title="Administrative Cost" data-content="<p>Recurring administrative cost. The default is shown in the fom if avaialble.</p>">
                            <span class="glyphicon glyphicon-question-sign"></span></a>

                            @Html.EditorFor(model => model.AdministrativeCost, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                            @Html.ValidationMessageFor(model => model.AdministrativeCost, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-6">

                            @Html.LabelFor(model => model.IncentivePayment, new { @class = "control-label" })
                            <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                               data-placement="left" title="Incentive Payment" data-content="<p>Any incentive payment rate.</p>">
                            <span class="glyphicon glyphicon-question-sign"></span></a>

                            @Html.EditorFor(model => model.IncentivePayment, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                            @Html.ValidationMessageFor(model => model.IncentivePayment, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-xs-6">

                            @Html.LabelFor(model => model.YearsOfIncentivePayment, new { @class = "control-label" })
                            <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                               data-placement="left" title="Years of Incentive Payment" data-content="<p>Years of incentive paymement.</p>">
                                <span class="glyphicon glyphicon-question-sign"></span></a>

                            @Html.EditorFor(model => model.YearsOfIncentivePayment, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                            @Html.ValidationMessageFor(model => model.YearsOfIncentivePayment, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-xs-6">

                            @Html.LabelFor(model => model.AvailableEquity, new { @class = "control-label" })
                            <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                               data-placement="left" title="Available Equity" data-content="<p>Equity is the interest or value that the owner has in real estate over and above liens against it.
                    You can estimate the available equity using this formula: </p><p>
                    Available Equity = Market Value - Total Loans</p>">
                                <span class="glyphicon glyphicon-question-sign"></span></a>

                            @Html.EditorFor(model => model.AvailableEquity, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                            @Html.ValidationMessageFor(model => model.AvailableEquity, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-xs-6">
                            @Html.LabelFor(model => model.LoanAmount, new { @class = "control-label" })
                            <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus" data-placement="left"
                               title="Loan Amount"
                               data-content="<p> The amount specified in the contract that the borrower agrees to pay back.
                        The amount of points included and various other costs make the loan amount different from
                        the quantity of cash distributed by the lender.
                    <p>
                    Available Equity = Market Value - Total Loans</p>">
                            <span class="glyphicon glyphicon-question-sign"></span></a>

                            @Html.EditorFor(model => model.LoanAmount, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                            @Html.ValidationMessageFor(model => model.LoanAmount, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-xs-6">
                            @Html.LabelFor(model => model.EquityLoanInterestRate, new { @class = "control-label" })

                            <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus" data-placement="left"
                               title="Loan Amount"
                               data-content="<p> The amount specified in the contract that the borrower agrees to pay back for equity loan.</p>">
                            <span class="glyphicon glyphicon-question-sign"></span></a>

                            @Html.EditorFor(model => model.EquityLoanInterestRate, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                            @Html.ValidationMessageFor(model => model.EquityLoanInterestRate, "", new { @class = "text-danger" })

                        </div>


                    </div>

                </div>

                <div class="row">
                    <div class="col-xs-6">

                        <br />
                        <button type="reset" value="Reset" class="btn btn-default">Reset</button>&nbsp;&nbsp;
                        <input type="submit" value="Submit" class="btn btn-default" />
                    </div>
                </div>
            </div>
            <div class="col-md-4 for-group">
                <h4>Instructions: Financial Information</h4>
                @{
                var instructions = InstructionService.GetFinancialInstruction(null);
                foreach (var ins in instructions)
                {
            <p>@ins</p>
                }
                }


            </div>
        </div>


    </div>

                    }



@section MyScripts {
    <script>

        $('document').ready(function () {
            $('#RequireFinance').change();
        })
        $('#RequireFinance').change(function () {

            // alert($('#RequireFinance').val());
            if ($('#RequireFinance').val() == 'true') {
                //alert($('#RequireFinance').val());
                $('#financialParameter').show();
            }

            else {
                $('#financialParameter').hide();
            }
        })
    </script>
}

