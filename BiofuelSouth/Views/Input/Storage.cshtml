@using System.Collections.Generic
@using System.Web.Hosting
@using BiofuelSouth.Models
@model BiofuelSouth.Models.Input

@{
    ViewBag.Title = "Index";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>DSS Input</h4>
        @Html.Partial("_DSSMenu")
        <div class="row">
            <div class="container col-md-4">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.StorageRequirement.StorageTime, htmlAttributes: new { @class = "control-label" })
                    <div class="row">
                        @Html.TextBoxFor(model => model.StorageRequirement.StorageTime, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StorageRequirement.StorageTime, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*
    <div class="form-group">
        @Html.LabelFor(model => model.StorageRequirement.PercentDirectlyToPlantGate, htmlAttributes: new { @class = "control-label" })
        <div class="row">
            @Html.TextBoxFor(model => model.StorageRequirement.PercentDirectlyToPlantGate, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StorageRequirement.PercentDirectlyToPlantGate, "", new { @class = "text-danger" })
        </div>
    </div>
    *@

                <div class="form-group">
                    @Html.LabelFor(model => model.StorageRequirement.PercentStored, htmlAttributes: new { @class = "control-label" })
                    <div class="row">
                        @Html.TextBoxFor(model => model.StorageRequirement.PercentStored, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StorageRequirement.PercentStored, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StorageRequirement.StorageMethod, htmlAttributes: new { @class = "control-label" })
                    <div class="row">
                        @Html.DropDownListFor(model => model.StorageRequirement.StorageMethod, (List<SelectListItem>)ViewBag.StorageMethod, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StorageRequirement.StorageMethod, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    <div class="row">
                     
                        <input type="submit" value="Submit" class="btn btn-default pull-left" />
                    </div>
                </div>

            </div>
            <div class="col-md-8">
                @Html.Partial("_inputResult", Model)
            </div>

        </div>

    </div>
}


@section MyScripts {

    <script type="text/javascript">
        //http://www.codeproject.com/Articles/730953/Cascading-Dropdown-List-With-MVC-LINQ-to-SQL-and-A
        $(document).ready(function () {
            $("#county").prop("disabled", true);

            if ($('#state').val() != "Select State") {
                $("#county").prop("disabled", false);
                populateCounty();
            }


            $("#state").change(function () {
                if ($("#state").val() != "Select County") {
                    populateCounty();
                }

            }
    );
            //$("#summaryHead").html('<h2>Summay for Switchgrass in'+$('#county').val() + "," + $('#state').val() + '</h2>');

        });

        function populateCounty() {
            var ddlCounty = $("#county");
            $.ajax({
                url: "/data/CountiesForState",
                cache: false,
                type: "GET",
                data: { state: $("#state").val() },

                success: function (data) {
                    $("#county").empty();
                    ddlCounty.append($('<option></option>').val('').html("Select County"));
                    $.each(data, function (id, option) {
                        ddlCounty.append($('<option></option>').val(option.id).html(option.name));
                    });
                    $("#county").prop("disabled", false);
                },

                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve county.');
                    $("#county").prop("disabled", true);
                }
            });
        }
    </script>



}

