@using System.Collections.Generic
@using System.Web.Hosting
@using BiofuelSouth.Models
@model BiofuelSouth.Models.Input



@{
    ViewBag.Title = "Index";
}
@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>DSS Input</h4>
        @Html.Partial("_DSSMenu")
        <div class="row">
            <div class="container col-md-4">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus" 
                       data-placement="center" title="State" data-content="<p>State of the production of biofuel crop.</p>">
                         <span class="glyphicon glyphicon-question-sign"></span>Help
                    </a>
                    <div class="row">
                        @Html.DropDownListFor(model => model.State, new SelectList(ViewBag.State), new { @class = "form-control", id = "state" })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label" })
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                       data-placement="center" title="County" data-content="<p>County of production.</p>">
                         <span class="glyphicon glyphicon-question-sign"></span>Help
                    </a>
                    <div class="row">
                        @Html.DropDownListFor(model => model.County, new SelectList(new List<string> { "Select County" }), new { @class = "form-control", name = "county", id = "county" })
                        @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })&nbsp;
                    
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                       data-placement="center" title="Crop category" data-content="<p>Select the type of biofuel crops. If you do not find a crop in the list, please contact us.</p>">
                         <span class="glyphicon glyphicon-question-sign">Help</span></a>
                    <div class="row">
                        @Html.DropDownListFor(model => model.Category, new SelectList(ViewBag.Category), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectSize, htmlAttributes: new { @class = "control-label" })
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                       data-placement="center" title="Help" data-content="<p>Enter size of the potential project. The area must be in acres. If you do not yet know the size, use any reasonable acre. By default it will be 1.</p>">
                         <span class="glyphicon glyphicon-question-sign"></span>Help
                    </a>
                    <div class="row">
                        @Html.EditorFor(model => model.ProjectSize, new { text = 1, htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjectSize, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InterestRate, htmlAttributes: new { @class = "control-label" })
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                       data-placement="center" title="Interest Rate" data-content="<p>If the project relies on financing, enter interest rate. 
                       An interest rate is a rate which is charged or paid for the use of money and is often expressed as an annual percentage of the principal. 
                        It is calculated by dividing the amount of interest by the amount of principal. 
                    Interest rates often change as a result of inflation and financial poslies. For example, 
                    if a lender (such as a bank) charges a customer $75 in a year on a loan of $1000, then the interest rate would be 75/1000 *100% = 7.5%.
                    Read more: http://www.investorwords.com/2539/interest_rate.html#ixzz3NsD6A9ff </p>">
                         <span class="glyphicon glyphicon-question-sign"></span>Help
                    </a>
                    <div class="row">
                        @Html.EditorFor(model => model.InterestRate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InterestRate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectLife, htmlAttributes: new { @class = "control-label" })
                   <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                       data-placement="left" title="Project Duration" data-content="<p>Duration of project expressed as total number of years 
                    between first plantation and final harvest with intermediate harvests in between.</p>">
                         <span class="glyphicon glyphicon-question-sign"></span>Help
                    </a>
                    <div class="row">
                        @Html.EditorFor(model => model.ProjectLife, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjectLife, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LandCost, htmlAttributes: new { @class = "control-label" })
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                       data-placement="left" title="Land Cost" data-content="<p>Annual cost of land expressed as  $/acre/year.</p>">
                         <span class="glyphicon glyphicon-question-sign"></span>Help
                    </a>
                    <div class="row">
                        @Html.EditorFor(model => model.LandCost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LandCost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AdministrativeCost, htmlAttributes: new { @class = "control-label" })
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                       data-placement="left" title="Administrative Cost" data-content="<p>Recurring administrative cost. The default is shown in the fom if avaialble.</p>">
                         <span class="glyphicon glyphicon-question-sign"></span>Help
                    </a>
                    <div class="row">
                        @Html.EditorFor(model => model.AdministrativeCost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AdministrativeCost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IncentivePayment, htmlAttributes: new { @class = "control-label" })
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                       data-placement="left" title="Incentive Payment" data-content="<p>Any incentive payment rate.</p>">
                         <span class="glyphicon glyphicon-question-sign"></span>Help
                    </a>
                    <div class="row">
                        @Html.EditorFor(model => model.IncentivePayment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IncentivePayment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.YearsOfIncentivePayment, htmlAttributes: new { @class = "control-label" })
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                       data-placement="left" title="Years of Incentive Payment" data-content="<p>Years of incentive paymement.</p>">
                         <span class="glyphicon glyphicon-question-sign"></span>Help
                    </a>
                    <div class="row">
                        @Html.EditorFor(model => model.YearsOfIncentivePayment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.YearsOfIncentivePayment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BiomassPriceAtFarmGate, htmlAttributes: new { @class = "control-label" })
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                       data-placement="left" title="Farm Gate Price" data-content="<p>The price of the product at which it is sold by the farm (the farm gate price).</p>">
                         <span class="glyphicon glyphicon-question-sign"></span>Help
                    </a>
                    <div class="row">
                        @Html.EditorFor(model => model.BiomassPriceAtFarmGate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BiomassPriceAtFarmGate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AvailableEquity, htmlAttributes: new { @class = "control-label" })
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus"
                       data-placement="left" title="Available Equity" data-content="<p>Equity is the interest or value that the owner has in real estate over and above liens against it.
                    You can estimate the available equity using this formula: </p><p>
                    Available Equity = Market Value - Total Loans</p>">
                         <span class="glyphicon glyphicon-question-sign"></span>Help
                    </a>
                    <div class="row">
                        @Html.EditorFor(model => model.AvailableEquity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AvailableEquity, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LoanAmount, htmlAttributes: new { @class = "control-label" })
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus" data-placement="left"
                       title="Loan Amount"
                       data-content="<p> The amount specified in the contract that the borrower agrees to pay back.
                        The amount of points included and various other costs make the loan amount different from
                        the quantity of cash distributed by the lender.
                    <p>
                    Available Equity = Market Value - Total Loans</p>">
                       <span class="glyphicon glyphicon-question-sign">Help</span>
                    </a>
                    
                    
                    <div class="row">
                        @Html.EditorFor(model => model.LoanAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LoanAmount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EquityLoanInterestRate, htmlAttributes: new { @class = "control-label" })
                    
                    <a href="#" rel="popover" class="" data-toggle="popover" tabindex="0" data-trigger="focus" data-placement="left"
                       title="Loan Amount"
                       data-content="<p> The amount specified in the contract that the borrower agrees to pay back for equity loan.</p>">
                        <span class="glyphicon glyphicon-question-sign">Help</span>
                    </a>
                    <div class="row">
                        @Html.EditorFor(model => model.EquityLoanInterestRate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EquityLoanInterestRate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <input type="submit" value="Submit" class="btn btn-default pull-left" />

                    </div>
                </div>
             
            </div>
            <!-- Output-->

            <div class="col-md-8">
                @Html.Partial("_inputResult", Model)
            </div>
            

        </div>
    </div>
}



@section MyScripts {

    <script type="text/javascript">
        //http://www.codeproject.com/Articles/730953/Cascading-Dropdown-List-With-MVC-LINQ-to-SQL-and-A
        $(document).ready(function () {

            test();
            $("#county").prop("disabled", true);

            if ($('#state').val() != "Select State") {
                $("#county").prop("disabled", false);
                populateCounty();
            }

            

            $("#state").change(function () {
                if ($("#state").val() != "Select County") {
                    populateCounty();
                }

            }
    );
            //$("#summaryHead").html('<h2>Summay for Switchgrass in'+$('#county').val() + "," + $('#state').val() + '</h2>');

        });

        function populateCounty() {
            var ddlCounty = $("#county");
            $.ajax({
                url: "/data/CountiesForState",
                cache: false,
                type: "GET",
                data: { state: $("#state").val() },

                success: function (data) {
                    $("#county").empty();
                    ddlCounty.append($('<option></option>').val('').html("Select County"));
                    $.each(data, function (id, option) {
                        ddlCounty.append($('<option></option>').val(option.id).html(option.name));
                    });
                    $("#county").prop("disabled", false);
                },

                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve county.');
                    $("#county").prop("disabled", true);
                }
            });
        }
    </script>



}

